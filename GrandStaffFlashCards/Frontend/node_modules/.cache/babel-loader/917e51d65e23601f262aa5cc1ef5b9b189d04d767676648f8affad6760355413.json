{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"grand-staff\"\n};\nconst _hoisted_2 = {\n  ref: \"staffCanvas\",\n  width: \"600\",\n  height: \"300\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","ref","width","height","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2"],"sources":["C:\\Users\\georg\\Documents\\Projects\\Cursor Tutorial\\GrandStaffFlashCards\\Frontend\\src\\components\\GrandStaff.vue"],"sourcesContent":["<template>\r\n  <div class=\"grand-staff\">\r\n    <canvas ref=\"staffCanvas\" width=\"600\" height=\"300\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'GrandStaff',\r\n  props: {\r\n    note: {\r\n      type: Object,\r\n      required: true,\r\n      validator: (value) => {\r\n        return value.letter && \r\n               typeof value.accidental !== 'undefined' && \r\n               typeof value.octave !== 'undefined' &&\r\n               value.keySignature &&\r\n               value.timeSignature;\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ctx: null,\r\n      staffLineSpacing: 10,\r\n      staffX: 50,\r\n      staffWidth: 500,\r\n      trebleStaffY: 80,\r\n      bassStaffY: 200,\r\n      noteRadius: 8\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ctx = this.$refs.staffCanvas.getContext('2d');\r\n    this.drawGrandStaff();\r\n    this.drawNote();\r\n  },\r\n  watch: {\r\n    note: {\r\n      handler() {\r\n        this.redraw();\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    redraw() {\r\n      this.ctx.clearRect(0, 0, this.$refs.staffCanvas.width, this.$refs.staffCanvas.height);\r\n      this.drawGrandStaff();\r\n      this.drawNote();\r\n    },\r\n    \r\n    drawGrandStaff() {\r\n      // Draw staff lines\r\n      this.ctx.lineWidth = 1;\r\n      this.ctx.strokeStyle = '#000';\r\n      \r\n      // Draw treble staff (5 lines)\r\n      for (let i = 0; i < 5; i++) {\r\n        const y = this.trebleStaffY + i * this.staffLineSpacing;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.staffX, y);\r\n        this.ctx.lineTo(this.staffX + this.staffWidth, y);\r\n        this.ctx.stroke();\r\n      }\r\n      \r\n      // Draw bass staff (5 lines)\r\n      for (let i = 0; i < 5; i++) {\r\n        const y = this.bassStaffY + i * this.staffLineSpacing;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.staffX, y);\r\n        this.ctx.lineTo(this.staffX + this.staffWidth, y);\r\n        this.ctx.stroke();\r\n      }\r\n      \r\n      // Draw treble clef (simplified)\r\n      this.ctx.font = '60px serif';\r\n      this.ctx.fillText('𝄞', this.staffX + 10, this.trebleStaffY + 40);\r\n      \r\n      // Draw bass clef (simplified)\r\n      this.ctx.font = '40px serif';\r\n      this.ctx.fillText('𝄢', this.staffX + 10, this.bassStaffY + 25);\r\n      \r\n      // Draw key signature\r\n      this.drawKeySignature();\r\n      \r\n      // Draw time signature\r\n      this.drawTimeSignature();\r\n    },\r\n    \r\n    drawKeySignature() {\r\n      // Simplified key signature display\r\n      const keyX = this.staffX + 60;\r\n      \r\n      this.ctx.font = '16px serif';\r\n      this.ctx.fillStyle = '#000';\r\n      \r\n      if (this.note.keySignature === 'G Major') {\r\n        // Draw F# for G Major\r\n        this.ctx.fillText('♯', keyX, this.trebleStaffY - 5);\r\n      } else if (this.note.keySignature === 'F Major') {\r\n        // Draw Bb for F Major\r\n        this.ctx.fillText('♭', keyX, this.trebleStaffY + 15);\r\n      }\r\n      // C Major has no sharps or flats\r\n    },\r\n    \r\n    drawTimeSignature() {\r\n      const timeX = this.staffX + 100;\r\n      \r\n      this.ctx.font = '20px serif';\r\n      this.ctx.fillStyle = '#000';\r\n      \r\n      const [numerator, denominator] = this.note.timeSignature.split('/');\r\n      \r\n      // Draw time signature on both staves\r\n      this.ctx.fillText(numerator, timeX, this.trebleStaffY + 15);\r\n      this.ctx.fillText(denominator, timeX, this.trebleStaffY + 35);\r\n      \r\n      this.ctx.fillText(numerator, timeX, this.bassStaffY + 15);\r\n      this.ctx.fillText(denominator, timeX, this.bassStaffY + 35);\r\n    },\r\n    \r\n    drawNote() {\r\n      // Calculate note position based on letter and octave\r\n      const noteX = this.staffX + 250;\r\n      let noteY = 0;\r\n      \r\n      // Map note letters to positions (simplified)\r\n      const notePositions = {\r\n        'C': 0,\r\n        'D': -1,\r\n        'E': -2,\r\n        'F': -3,\r\n        'G': -4,\r\n        'A': -5,\r\n        'B': -6\r\n      };\r\n      \r\n      // Determine if note is on treble or bass staff\r\n      if (this.note.octave >= 4) {\r\n        // Treble staff (middle C is one ledger line below)\r\n        const basePosition = this.trebleStaffY + 5 * this.staffLineSpacing + this.staffLineSpacing;\r\n        const octaveOffset = (4 - this.note.octave) * 7 * this.staffLineSpacing / 2;\r\n        noteY = basePosition + octaveOffset + notePositions[this.note.letter] * this.staffLineSpacing / 2;\r\n      } else {\r\n        // Bass staff (middle C is one ledger line above)\r\n        const basePosition = this.bassStaffY - this.staffLineSpacing;\r\n        const octaveOffset = (3 - this.note.octave) * 7 * this.staffLineSpacing / 2;\r\n        noteY = basePosition + octaveOffset + notePositions[this.note.letter] * this.staffLineSpacing / 2;\r\n      }\r\n      \r\n      // Draw the note\r\n      this.ctx.beginPath();\r\n      this.ctx.ellipse(noteX, noteY, this.noteRadius, this.noteRadius * 0.8, Math.PI / 4, 0, 2 * Math.PI);\r\n      this.ctx.fill();\r\n      \r\n      // Draw stem\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(noteX + this.noteRadius, noteY);\r\n      this.ctx.lineTo(noteX + this.noteRadius, noteY - 30);\r\n      this.ctx.stroke();\r\n      \r\n      // Draw accidental\r\n      if (this.note.accidental === '#') {\r\n        this.ctx.font = '24px serif';\r\n        this.ctx.fillText('♯', noteX - 25, noteY + 8);\r\n      } else if (this.note.accidental === 'b') {\r\n        this.ctx.font = '24px serif';\r\n        this.ctx.fillText('♭', noteX - 25, noteY + 8);\r\n      }\r\n      \r\n      // Draw ledger lines if needed\r\n      this.drawLedgerLines(noteX, noteY);\r\n    },\r\n    \r\n    drawLedgerLines(noteX, noteY) {\r\n      this.ctx.lineWidth = 1;\r\n      this.ctx.strokeStyle = '#000';\r\n      \r\n      // Ledger lines for treble staff\r\n      if (noteY > this.trebleStaffY + 5 * this.staffLineSpacing) {\r\n        for (let y = this.trebleStaffY + 6 * this.staffLineSpacing; y <= noteY; y += this.staffLineSpacing) {\r\n          if ((y - this.trebleStaffY) % (this.staffLineSpacing * 2) === 0) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(noteX - 15, y);\r\n            this.ctx.lineTo(noteX + 15, y);\r\n            this.ctx.stroke();\r\n          }\r\n        }\r\n      } else if (noteY < this.trebleStaffY) {\r\n        for (let y = this.trebleStaffY - this.staffLineSpacing; y >= noteY; y -= this.staffLineSpacing) {\r\n          if ((this.trebleStaffY - y) % (this.staffLineSpacing * 2) === 0) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(noteX - 15, y);\r\n            this.ctx.lineTo(noteX + 15, y);\r\n            this.ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Ledger lines for bass staff\r\n      if (noteY > this.bassStaffY + 5 * this.staffLineSpacing) {\r\n        for (let y = this.bassStaffY + 6 * this.staffLineSpacing; y <= noteY; y += this.staffLineSpacing) {\r\n          if ((y - this.bassStaffY) % (this.staffLineSpacing * 2) === 0) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(noteX - 15, y);\r\n            this.ctx.lineTo(noteX + 15, y);\r\n            this.ctx.stroke();\r\n          }\r\n        }\r\n      } else if (noteY < this.bassStaffY) {\r\n        for (let y = this.bassStaffY - this.staffLineSpacing; y >= noteY; y -= this.staffLineSpacing) {\r\n          if ((this.bassStaffY - y) % (this.staffLineSpacing * 2) === 0) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(noteX - 15, y);\r\n            this.ctx.lineTo(noteX + 15, y);\r\n            this.ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.grand-staff {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0;\r\n}\r\n\r\ncanvas {\r\n  border: 1px solid #eee;\r\n  background-color: white;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EACdC,GAAG,EAAC,aAAa;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;uBAD/CC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,CAA4D,UAA5DC,UAA4D,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}