{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'Decks',\n  computed: {\n    ...mapGetters(['allDecks', 'isLoading', 'hasError', 'errorMessage'])\n  },\n  methods: {\n    ...mapActions(['fetchDecks'])\n  },\n  created() {\n    this.fetchDecks();\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","name","computed","methods","created","fetchDecks"],"sources":["C:\\Users\\georg\\Documents\\Projects\\Cursor Tutorial\\GrandStaffFlashCards\\Frontend\\src\\views\\Decks.vue"],"sourcesContent":["<template>\r\n  <div class=\"decks\">\r\n    <h1 class=\"mb-4\">Flash Card Decks</h1>\r\n    \r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n      <p class=\"mt-2\">Loading decks...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"hasError\" class=\"alert alert-danger\" role=\"alert\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 mb-4\" v-for=\"deck in allDecks\" :key=\"deck.id\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">{{ deck.name }}</h5>\r\n              <p class=\"card-text\">{{ deck.description }}</p>\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <span class=\"badge bg-info\">{{ deck.cardCount || 0 }} cards</span>\r\n                <router-link :to=\"'/practice'\" class=\"btn btn-primary\">Practice</router-link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Future Development: Card Builder -->\r\n        <div class=\"col-md-4 mb-4\">\r\n          <div class=\"card h-100 border-dashed\">\r\n            <div class=\"card-body text-center\">\r\n              <h5 class=\"card-title text-muted\">Create Your Own Deck</h5>\r\n              <p class=\"card-text text-muted\">Coming soon! Build custom flash card decks for any subject.</p>\r\n              <button class=\"btn btn-outline-secondary\" disabled>Coming Soon</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"mt-5\">\r\n        <h2>Future Development</h2>\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Flashcard Builder Interface</h5>\r\n            <p class=\"card-text\">\r\n              In future updates, you'll be able to create your own custom flash cards for:\r\n            </p>\r\n            <ul>\r\n              <li>Music theory concepts</li>\r\n              <li>Multiplication tables</li>\r\n              <li>Vocabulary</li>\r\n              <li>Color theory</li>\r\n              <li>And more!</li>\r\n            </ul>\r\n            <p>\r\n              The application is designed with a generic flashcard module that can be extended\r\n              for various learning purposes.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Decks',\r\n  computed: {\r\n    ...mapGetters([\r\n      'allDecks',\r\n      'isLoading',\r\n      'hasError',\r\n      'errorMessage'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'fetchDecks'\r\n    ])\r\n  },\r\n  created() {\r\n    this.fetchDecks()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.border-dashed {\r\n  border-style: dashed;\r\n  border-width: 2px;\r\n  background-color: #f8f9fa;\r\n}\r\n</style> "],"mappings":"AAqEA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAK;AAE5C,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE;IACR,GAAGH,UAAU,CAAC,CACZ,UAAU,EACV,WAAW,EACX,UAAU,EACV,cAAa,CACd;EACH,CAAC;EACDI,OAAO,EAAE;IACP,GAAGH,UAAU,CAAC,CACZ,YAAW,CACZ;EACH,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC;EAClB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}