{"ast":null,"code":"import { computed, onMounted } from 'vue';\nimport { useFlashCardStore } from '../stores/flashCardStore';\nexport default {\n  __name: 'DecksView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useFlashCardStore();\n\n    // Computed properties\n    const decks = computed(() => store.decks);\n    const isLoading = computed(() => store.isLoading);\n    const hasError = computed(() => store.error !== null);\n    const errorMessage = computed(() => store.error);\n\n    // Lifecycle hooks\n    onMounted(() => {\n      store.fetchDecks();\n    });\n    const __returned__ = {\n      store,\n      decks,\n      isLoading,\n      hasError,\n      errorMessage,\n      computed,\n      onMounted,\n      get useFlashCardStore() {\n        return useFlashCardStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","onMounted","useFlashCardStore","store","decks","isLoading","hasError","error","errorMessage","fetchDecks"],"sources":["C:/Users/georg/Documents/Projects/Cursor Tutorial/GrandStaffFlashCards/Frontend/src/views/DecksView.vue"],"sourcesContent":["<template>\r\n  <div class=\"decks\">\r\n    <h1 class=\"mb-4\">Flash Card Decks</h1>\r\n    \r\n    <div v-if=\"isLoading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n      <p class=\"mt-2\">Loading decks...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"hasError\" class=\"alert alert-danger\" role=\"alert\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 mb-4\" v-for=\"deck in decks\" :key=\"deck.id\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">{{ deck.name }}</h5>\r\n              <p class=\"card-text\">{{ deck.description }}</p>\r\n              <div class=\"d-flex justify-content-between align-items-center\">\r\n                <span class=\"badge bg-info\">{{ deck.cardCount || 0 }} cards</span>\r\n                <router-link :to=\"'/practice'\" class=\"btn btn-primary\">Practice</router-link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Future Development: Card Builder -->\r\n        <div class=\"col-md-4 mb-4\">\r\n          <div class=\"card h-100 border-dashed\">\r\n            <div class=\"card-body text-center\">\r\n              <h5 class=\"card-title text-muted\">Create Your Own Deck</h5>\r\n              <p class=\"card-text text-muted\">Coming soon! Build custom flash card decks for any subject.</p>\r\n              <button class=\"btn btn-outline-secondary\" disabled>Coming Soon</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"mt-5\">\r\n        <h2>Future Development</h2>\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Flashcard Builder Interface</h5>\r\n            <p class=\"card-text\">\r\n              In future updates, you'll be able to create your own custom flash cards for:\r\n            </p>\r\n            <ul>\r\n              <li>Music theory concepts</li>\r\n              <li>Multiplication tables</li>\r\n              <li>Vocabulary</li>\r\n              <li>Color theory</li>\r\n              <li>And more!</li>\r\n            </ul>\r\n            <p>\r\n              The application is designed with a generic flashcard module that can be extended\r\n              for various learning purposes.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, onMounted } from 'vue'\r\nimport { useFlashCardStore } from '../stores/flashCardStore'\r\n\r\nconst store = useFlashCardStore()\r\n\r\n// Computed properties\r\nconst decks = computed(() => store.decks)\r\nconst isLoading = computed(() => store.isLoading)\r\nconst hasError = computed(() => store.error !== null)\r\nconst errorMessage = computed(() => store.error)\r\n\r\n// Lifecycle hooks\r\nonMounted(() => {\r\n  store.fetchDecks()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.border-dashed {\r\n  border-style: dashed;\r\n  border-width: 2px;\r\n  background-color: #f8f9fa;\r\n}\r\n</style> "],"mappings":"AAqEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AACzC,SAASC,iBAAiB,QAAQ,0BAA0B;;;;;;;IAE5D,MAAMC,KAAK,GAAGD,iBAAiB,CAAC,CAAC;;IAEjC;IACA,MAAME,KAAK,GAAGJ,QAAQ,CAAC,MAAMG,KAAK,CAACC,KAAK,CAAC;IACzC,MAAMC,SAAS,GAAGL,QAAQ,CAAC,MAAMG,KAAK,CAACE,SAAS,CAAC;IACjD,MAAMC,QAAQ,GAAGN,QAAQ,CAAC,MAAMG,KAAK,CAACI,KAAK,KAAK,IAAI,CAAC;IACrD,MAAMC,YAAY,GAAGR,QAAQ,CAAC,MAAMG,KAAK,CAACI,KAAK,CAAC;;IAEhD;IACAN,SAAS,CAAC,MAAM;MACdE,KAAK,CAACM,UAAU,CAAC,CAAC;IACpB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}