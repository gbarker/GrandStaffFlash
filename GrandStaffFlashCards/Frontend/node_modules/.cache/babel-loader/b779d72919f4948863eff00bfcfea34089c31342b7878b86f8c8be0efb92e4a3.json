{"ast":null,"code":"export default {\n  name: 'GrandStaff',\n  props: {\n    note: {\n      type: Object,\n      required: true,\n      validator: value => {\n        return value.letter && typeof value.accidental !== 'undefined' && typeof value.octave !== 'undefined' && value.keySignature && value.timeSignature;\n      }\n    }\n  },\n  data() {\n    return {\n      ctx: null,\n      staffLineSpacing: 10,\n      staffX: 50,\n      staffWidth: 500,\n      trebleStaffY: 80,\n      bassStaffY: 200,\n      noteRadius: 8\n    };\n  },\n  mounted() {\n    this.ctx = this.$refs.staffCanvas.getContext('2d');\n    this.drawGrandStaff();\n    this.drawNote();\n  },\n  watch: {\n    note: {\n      handler() {\n        this.redraw();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    redraw() {\n      this.ctx.clearRect(0, 0, this.$refs.staffCanvas.width, this.$refs.staffCanvas.height);\n      this.drawGrandStaff();\n      this.drawNote();\n    },\n    drawGrandStaff() {\n      // Draw staff lines\n      this.ctx.lineWidth = 1;\n      this.ctx.strokeStyle = '#000';\n\n      // Draw treble staff (5 lines)\n      for (let i = 0; i < 5; i++) {\n        const y = this.trebleStaffY + i * this.staffLineSpacing;\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.staffX, y);\n        this.ctx.lineTo(this.staffX + this.staffWidth, y);\n        this.ctx.stroke();\n      }\n\n      // Draw bass staff (5 lines)\n      for (let i = 0; i < 5; i++) {\n        const y = this.bassStaffY + i * this.staffLineSpacing;\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.staffX, y);\n        this.ctx.lineTo(this.staffX + this.staffWidth, y);\n        this.ctx.stroke();\n      }\n\n      // Draw treble clef (simplified)\n      this.ctx.font = '60px serif';\n      this.ctx.fillText('𝄞', this.staffX + 10, this.trebleStaffY + 40);\n\n      // Draw bass clef (simplified)\n      this.ctx.font = '40px serif';\n      this.ctx.fillText('𝄢', this.staffX + 10, this.bassStaffY + 25);\n\n      // Draw key signature\n      this.drawKeySignature();\n\n      // Draw time signature\n      this.drawTimeSignature();\n    },\n    drawKeySignature() {\n      // Simplified key signature display\n      const keyX = this.staffX + 60;\n      this.ctx.font = '16px serif';\n      this.ctx.fillStyle = '#000';\n      if (this.note.keySignature === 'G Major') {\n        // Draw F# for G Major\n        this.ctx.fillText('♯', keyX, this.trebleStaffY - 5);\n      } else if (this.note.keySignature === 'F Major') {\n        // Draw Bb for F Major\n        this.ctx.fillText('♭', keyX, this.trebleStaffY + 15);\n      }\n      // C Major has no sharps or flats\n    },\n    drawTimeSignature() {\n      const timeX = this.staffX + 100;\n      this.ctx.font = '20px serif';\n      this.ctx.fillStyle = '#000';\n      const [numerator, denominator] = this.note.timeSignature.split('/');\n\n      // Draw time signature on both staves\n      this.ctx.fillText(numerator, timeX, this.trebleStaffY + 15);\n      this.ctx.fillText(denominator, timeX, this.trebleStaffY + 35);\n      this.ctx.fillText(numerator, timeX, this.bassStaffY + 15);\n      this.ctx.fillText(denominator, timeX, this.bassStaffY + 35);\n    },\n    drawNote() {\n      // Calculate note position based on letter and octave\n      const noteX = this.staffX + 250;\n      let noteY = 0;\n\n      // Map note letters to positions (simplified)\n      const notePositions = {\n        'C': 0,\n        'D': -1,\n        'E': -2,\n        'F': -3,\n        'G': -4,\n        'A': -5,\n        'B': -6\n      };\n\n      // Determine if note is on treble or bass staff\n      if (this.note.octave >= 4) {\n        // Treble staff (middle C is one ledger line below)\n        const basePosition = this.trebleStaffY + 5 * this.staffLineSpacing + this.staffLineSpacing;\n        const octaveOffset = (4 - this.note.octave) * 7 * this.staffLineSpacing / 2;\n        noteY = basePosition + octaveOffset + notePositions[this.note.letter] * this.staffLineSpacing / 2;\n      } else {\n        // Bass staff (middle C is one ledger line above)\n        const basePosition = this.bassStaffY - this.staffLineSpacing;\n        const octaveOffset = (3 - this.note.octave) * 7 * this.staffLineSpacing / 2;\n        noteY = basePosition + octaveOffset + notePositions[this.note.letter] * this.staffLineSpacing / 2;\n      }\n\n      // Draw the note\n      this.ctx.beginPath();\n      this.ctx.ellipse(noteX, noteY, this.noteRadius, this.noteRadius * 0.8, Math.PI / 4, 0, 2 * Math.PI);\n      this.ctx.fill();\n\n      // Draw stem\n      this.ctx.beginPath();\n      this.ctx.moveTo(noteX + this.noteRadius, noteY);\n      this.ctx.lineTo(noteX + this.noteRadius, noteY - 30);\n      this.ctx.stroke();\n\n      // Draw accidental\n      if (this.note.accidental === '#') {\n        this.ctx.font = '24px serif';\n        this.ctx.fillText('♯', noteX - 25, noteY + 8);\n      } else if (this.note.accidental === 'b') {\n        this.ctx.font = '24px serif';\n        this.ctx.fillText('♭', noteX - 25, noteY + 8);\n      }\n\n      // Draw ledger lines if needed\n      this.drawLedgerLines(noteX, noteY);\n    },\n    drawLedgerLines(noteX, noteY) {\n      this.ctx.lineWidth = 1;\n      this.ctx.strokeStyle = '#000';\n\n      // Ledger lines for treble staff\n      if (noteY > this.trebleStaffY + 5 * this.staffLineSpacing) {\n        for (let y = this.trebleStaffY + 6 * this.staffLineSpacing; y <= noteY; y += this.staffLineSpacing) {\n          if ((y - this.trebleStaffY) % (this.staffLineSpacing * 2) === 0) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(noteX - 15, y);\n            this.ctx.lineTo(noteX + 15, y);\n            this.ctx.stroke();\n          }\n        }\n      } else if (noteY < this.trebleStaffY) {\n        for (let y = this.trebleStaffY - this.staffLineSpacing; y >= noteY; y -= this.staffLineSpacing) {\n          if ((this.trebleStaffY - y) % (this.staffLineSpacing * 2) === 0) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(noteX - 15, y);\n            this.ctx.lineTo(noteX + 15, y);\n            this.ctx.stroke();\n          }\n        }\n      }\n\n      // Ledger lines for bass staff\n      if (noteY > this.bassStaffY + 5 * this.staffLineSpacing) {\n        for (let y = this.bassStaffY + 6 * this.staffLineSpacing; y <= noteY; y += this.staffLineSpacing) {\n          if ((y - this.bassStaffY) % (this.staffLineSpacing * 2) === 0) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(noteX - 15, y);\n            this.ctx.lineTo(noteX + 15, y);\n            this.ctx.stroke();\n          }\n        }\n      } else if (noteY < this.bassStaffY) {\n        for (let y = this.bassStaffY - this.staffLineSpacing; y >= noteY; y -= this.staffLineSpacing) {\n          if ((this.bassStaffY - y) % (this.staffLineSpacing * 2) === 0) {\n            this.ctx.beginPath();\n            this.ctx.moveTo(noteX - 15, y);\n            this.ctx.lineTo(noteX + 15, y);\n            this.ctx.stroke();\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","note","type","Object","required","validator","value","letter","accidental","octave","keySignature","timeSignature","data","ctx","staffLineSpacing","staffX","staffWidth","trebleStaffY","bassStaffY","noteRadius","mounted","$refs","staffCanvas","getContext","drawGrandStaff","drawNote","watch","handler","redraw","deep","methods","clearRect","width","height","lineWidth","strokeStyle","i","y","beginPath","moveTo","lineTo","stroke","font","fillText","drawKeySignature","drawTimeSignature","keyX","fillStyle","timeX","numerator","denominator","split","noteX","noteY","notePositions","basePosition","octaveOffset","ellipse","Math","PI","fill","drawLedgerLines"],"sources":["C:\\Users\\georg\\Documents\\Projects\\Cursor Tutorial\\GrandStaffFlashCards\\Frontend\\src\\components\\GrandStaff.vue"],"sourcesContent":["<template>\r\n  <div class=\"grand-staff\">\r\n    <canvas ref=\"staffCanvas\" width=\"600\" height=\"300\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'GrandStaff',\r\n  props: {\r\n    note: {\r\n      type: Object,\r\n      required: true,\r\n      validator: (value) => {\r\n        return value.letter && \r\n               typeof value.accidental !== 'undefined' && \r\n               typeof value.octave !== 'undefined' &&\r\n               value.keySignature &&\r\n               value.timeSignature;\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ctx: null,\r\n      staffLineSpacing: 10,\r\n      staffX: 50,\r\n      staffWidth: 500,\r\n      trebleStaffY: 80,\r\n      bassStaffY: 200,\r\n      noteRadius: 8\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ctx = this.$refs.staffCanvas.getContext('2d');\r\n    this.drawGrandStaff();\r\n    this.drawNote();\r\n  },\r\n  watch: {\r\n    note: {\r\n      handler() {\r\n        this.redraw();\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    redraw() {\r\n      this.ctx.clearRect(0, 0, this.$refs.staffCanvas.width, this.$refs.staffCanvas.height);\r\n      this.drawGrandStaff();\r\n      this.drawNote();\r\n    },\r\n    \r\n    drawGrandStaff() {\r\n      // Draw staff lines\r\n      this.ctx.lineWidth = 1;\r\n      this.ctx.strokeStyle = '#000';\r\n      \r\n      // Draw treble staff (5 lines)\r\n      for (let i = 0; i < 5; i++) {\r\n        const y = this.trebleStaffY + i * this.staffLineSpacing;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.staffX, y);\r\n        this.ctx.lineTo(this.staffX + this.staffWidth, y);\r\n        this.ctx.stroke();\r\n      }\r\n      \r\n      // Draw bass staff (5 lines)\r\n      for (let i = 0; i < 5; i++) {\r\n        const y = this.bassStaffY + i * this.staffLineSpacing;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.staffX, y);\r\n        this.ctx.lineTo(this.staffX + this.staffWidth, y);\r\n        this.ctx.stroke();\r\n      }\r\n      \r\n      // Draw treble clef (simplified)\r\n      this.ctx.font = '60px serif';\r\n      this.ctx.fillText('𝄞', this.staffX + 10, this.trebleStaffY + 40);\r\n      \r\n      // Draw bass clef (simplified)\r\n      this.ctx.font = '40px serif';\r\n      this.ctx.fillText('𝄢', this.staffX + 10, this.bassStaffY + 25);\r\n      \r\n      // Draw key signature\r\n      this.drawKeySignature();\r\n      \r\n      // Draw time signature\r\n      this.drawTimeSignature();\r\n    },\r\n    \r\n    drawKeySignature() {\r\n      // Simplified key signature display\r\n      const keyX = this.staffX + 60;\r\n      \r\n      this.ctx.font = '16px serif';\r\n      this.ctx.fillStyle = '#000';\r\n      \r\n      if (this.note.keySignature === 'G Major') {\r\n        // Draw F# for G Major\r\n        this.ctx.fillText('♯', keyX, this.trebleStaffY - 5);\r\n      } else if (this.note.keySignature === 'F Major') {\r\n        // Draw Bb for F Major\r\n        this.ctx.fillText('♭', keyX, this.trebleStaffY + 15);\r\n      }\r\n      // C Major has no sharps or flats\r\n    },\r\n    \r\n    drawTimeSignature() {\r\n      const timeX = this.staffX + 100;\r\n      \r\n      this.ctx.font = '20px serif';\r\n      this.ctx.fillStyle = '#000';\r\n      \r\n      const [numerator, denominator] = this.note.timeSignature.split('/');\r\n      \r\n      // Draw time signature on both staves\r\n      this.ctx.fillText(numerator, timeX, this.trebleStaffY + 15);\r\n      this.ctx.fillText(denominator, timeX, this.trebleStaffY + 35);\r\n      \r\n      this.ctx.fillText(numerator, timeX, this.bassStaffY + 15);\r\n      this.ctx.fillText(denominator, timeX, this.bassStaffY + 35);\r\n    },\r\n    \r\n    drawNote() {\r\n      // Calculate note position based on letter and octave\r\n      const noteX = this.staffX + 250;\r\n      let noteY = 0;\r\n      \r\n      // Map note letters to positions (simplified)\r\n      const notePositions = {\r\n        'C': 0,\r\n        'D': -1,\r\n        'E': -2,\r\n        'F': -3,\r\n        'G': -4,\r\n        'A': -5,\r\n        'B': -6\r\n      };\r\n      \r\n      // Determine if note is on treble or bass staff\r\n      if (this.note.octave >= 4) {\r\n        // Treble staff (middle C is one ledger line below)\r\n        const basePosition = this.trebleStaffY + 5 * this.staffLineSpacing + this.staffLineSpacing;\r\n        const octaveOffset = (4 - this.note.octave) * 7 * this.staffLineSpacing / 2;\r\n        noteY = basePosition + octaveOffset + notePositions[this.note.letter] * this.staffLineSpacing / 2;\r\n      } else {\r\n        // Bass staff (middle C is one ledger line above)\r\n        const basePosition = this.bassStaffY - this.staffLineSpacing;\r\n        const octaveOffset = (3 - this.note.octave) * 7 * this.staffLineSpacing / 2;\r\n        noteY = basePosition + octaveOffset + notePositions[this.note.letter] * this.staffLineSpacing / 2;\r\n      }\r\n      \r\n      // Draw the note\r\n      this.ctx.beginPath();\r\n      this.ctx.ellipse(noteX, noteY, this.noteRadius, this.noteRadius * 0.8, Math.PI / 4, 0, 2 * Math.PI);\r\n      this.ctx.fill();\r\n      \r\n      // Draw stem\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(noteX + this.noteRadius, noteY);\r\n      this.ctx.lineTo(noteX + this.noteRadius, noteY - 30);\r\n      this.ctx.stroke();\r\n      \r\n      // Draw accidental\r\n      if (this.note.accidental === '#') {\r\n        this.ctx.font = '24px serif';\r\n        this.ctx.fillText('♯', noteX - 25, noteY + 8);\r\n      } else if (this.note.accidental === 'b') {\r\n        this.ctx.font = '24px serif';\r\n        this.ctx.fillText('♭', noteX - 25, noteY + 8);\r\n      }\r\n      \r\n      // Draw ledger lines if needed\r\n      this.drawLedgerLines(noteX, noteY);\r\n    },\r\n    \r\n    drawLedgerLines(noteX, noteY) {\r\n      this.ctx.lineWidth = 1;\r\n      this.ctx.strokeStyle = '#000';\r\n      \r\n      // Ledger lines for treble staff\r\n      if (noteY > this.trebleStaffY + 5 * this.staffLineSpacing) {\r\n        for (let y = this.trebleStaffY + 6 * this.staffLineSpacing; y <= noteY; y += this.staffLineSpacing) {\r\n          if ((y - this.trebleStaffY) % (this.staffLineSpacing * 2) === 0) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(noteX - 15, y);\r\n            this.ctx.lineTo(noteX + 15, y);\r\n            this.ctx.stroke();\r\n          }\r\n        }\r\n      } else if (noteY < this.trebleStaffY) {\r\n        for (let y = this.trebleStaffY - this.staffLineSpacing; y >= noteY; y -= this.staffLineSpacing) {\r\n          if ((this.trebleStaffY - y) % (this.staffLineSpacing * 2) === 0) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(noteX - 15, y);\r\n            this.ctx.lineTo(noteX + 15, y);\r\n            this.ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Ledger lines for bass staff\r\n      if (noteY > this.bassStaffY + 5 * this.staffLineSpacing) {\r\n        for (let y = this.bassStaffY + 6 * this.staffLineSpacing; y <= noteY; y += this.staffLineSpacing) {\r\n          if ((y - this.bassStaffY) % (this.staffLineSpacing * 2) === 0) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(noteX - 15, y);\r\n            this.ctx.lineTo(noteX + 15, y);\r\n            this.ctx.stroke();\r\n          }\r\n        }\r\n      } else if (noteY < this.bassStaffY) {\r\n        for (let y = this.bassStaffY - this.staffLineSpacing; y >= noteY; y -= this.staffLineSpacing) {\r\n          if ((this.bassStaffY - y) % (this.staffLineSpacing * 2) === 0) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(noteX - 15, y);\r\n            this.ctx.lineTo(noteX + 15, y);\r\n            this.ctx.stroke();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.grand-staff {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0;\r\n}\r\n\r\ncanvas {\r\n  border: 1px solid #eee;\r\n  background-color: white;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}